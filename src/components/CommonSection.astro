---
import SvgTriangle from '@/image/svg/Triangle.svg?raw';
import SvgCircle from '@/image/svg/Circle.svg?raw';
import SvgSquare from '@/image/svg/Square.svg?raw';
const { name = 'NAME', displayName, fullName = '', label = 'Label' } = Astro.props;
const getSvg = (name: string) => {
  if (name === 'triangle') return SvgTriangle;
  if (name === 'circle') return SvgCircle;
  if (name === 'square') return SvgSquare;
};
---

<div class="common-section" id={name}>
  <div class="common-section_inner">
    <div class="common-section_title">
      <div class="common-section_shape" set:html={getSvg(name)} />
      <div class="common-section_main">
        <div class="common-section_label">{label}</div>
        <h2 class="common-section_heading" set:html={displayName || name} />
      </div>
      <div class="common-section_object">
        <div class="common-section_stripe"></div>
        <div class="common-section_color"></div>
      </div>
      <div class="common-section_contents">
        <slot />
      </div>
    </div>
  </div>
</div>

<style lang="scss">
  @use '@/styles/_dev/+.scss' as *;

  .common-section {
    position: relative;
    width: 100%;
  }

  .common-section_inner {
    display: flex;
    align-items: center;
    max-width: max(40vw, #{rem(520)});
    min-height: 100svh;
    padding-right: var(--space-frame);
    padding-left: var(--space-frame);
    overflow: hidden;
  }

  .common-section_title {
    width: 100%;
    min-width: rem(256);
    padding-right: 1.5rem;
    padding-bottom: 4rem;
    padding-left: 1.5rem;
    margin-right: auto;
    margin-left: auto;

    @include min-screen(md) {
      padding-left: 3rem;
    }
  }

  .common-section_shape {
    width: 2rem;
    perspective: 1000px;
    perspective-origin: center center;
    transform-style: preserve-3d;

    & > :global(svg) {
      animation: 3s linear rotate-y infinite;
    }
  }

  @keyframes rotate-y {
    0% {
      rotate: 0 1 0 0deg;
    }

    100% {
      rotate: 0 1 0 180deg;
    }
  }

  .common-section_main {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
  }

  .common-section_label {
    padding: 0 0.5rem;
    margin-top: rem(10);
    font-size: var(--typo-size-50);
    color: var(--color-white);
    background-color: var(--color-black);
  }

  .common-section_heading {
    width: 100%;
    margin-right: -0.05em;
    font-size: 3.75rem;
    font-weight: var(--typo-weight-bold);
    line-height: 1;
    text-transform: uppercase;
    word-break: break-word;

    @include min-screen(md) {
      font-size: 4.5rem;
    }
  }

  .common-section_object {
    margin-top: 0.5rem;
  }

  .common-section_stripe {
    --this-color: var(--color-bg); // slategray;

    position: relative;
    width: rem(136);
    height: rem(40);
    background-image: repeating-linear-gradient(
      -45deg,
      transparent,
      transparent 8px,
      var(--this-color) 8px,
      var(--this-color) 16px
    );
    background-size: auto auto;
    animation-name: warning;
    animation-duration: 10s;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
  }

  @keyframes warning {
    0% {
      background-position: 0 0;
    }

    100% {
      background-position: 136px 0;
    }
  }

  .common-section_color {
    --this-size: #{rem(16)};

    width: rem(136);
    height: rem(40);
    margin-top: rem(-40);
    background: linear-gradient(90deg, var(--color-gradation-1), var(--color-gradation-2));
  }

  .common-section_contents {
    display: none;
    width: 100%;
    aspect-ratio: 2/3;
    margin-top: 2rem;
    background-color: snow;
  }
</style>
